# Generated by Django 4.0.3 on 2022-06-23 13:38

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Listing',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('duration', models.IntegerField(choices=[(1, 'One Day'), (2, 'Two Days'), (3, 'Three Days'), (4, 'Four Days'), (5, 'Five Days'), (6, 'Six Days'), (7, 'One Week'), (14, 'Two Weeks')])),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_end', models.DateTimeField()),
                ('closed', models.BooleanField(default=False)),
                ('startingbid', models.IntegerField(default=0)),
                ('image_url', models.URLField(verbose_name='Image URL')),
                ('availibility', models.BooleanField(default=True)),
                ('category', models.CharField(choices=[('Antiques', 'Antiques'), ('Art', 'Art'), ('Baby', 'Baby'), ('Books', 'Books'), ('Business & Industrial', 'Business & Industrial'), ('Cameras & Photo', 'Cameras & Photo'), ('Cell Phones & Accessories', 'Cell Phones & Accessories'), ('Clothing, Shoes & Accessories', 'Clothing, Shoes & Accessories'), ('Coins & Paper Money', 'Coins & Paper Money'), ('Collectibles', 'Collectibles'), ('Computers/Tablets & Networking', 'Computers/Tablets & Networking'), ('Consumer Electronics', 'Consumer Electronics'), ('Crafts', 'Crafts'), ('Dools & Bears', 'Dools & Bears'), ('Entertainment Memorabilia', 'Entertainment Memorabilia'), ('Gift Cards & Coupons', 'Gift Cards & Coupons'), ('Health & Beauty', 'Health & Beauty'), ('Home & Garden', 'Home & Garden'), ('Jewelry & Watches', 'Jewelry & Watches'), ('Music', 'Music'), ('Musical Instruments & Gear', 'Musical Instruments & Gear'), ('Pet Supplies', 'Pet Supplies'), ('Pottery & Glass', 'Pottery & Glass'), ('Real Estate', 'Real Estate'), ('Specialty Services', 'Specialty Services'), ('Sporting Goods', 'Sporting Goods'), ('Sports Mem, Cards & Fan Shop', 'Sports Mem, Cards & Fan Shop'), ('Stamps', 'Stamps'), ('Tickets & Experiences', 'Tickets & Experiences'), ('Toys & Hobbies', 'Toys & Hobbies'), ('Travel', 'Travel'), ('Video Games & Console', 'Video Games & Console'), ('Everything Else', 'Everything Else')], max_length=30)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listing', to=settings.AUTH_USER_MODEL)),
                ('watchlist', models.ManyToManyField(blank=True, related_name='watchlist', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('category',),
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('comment', models.CharField(max_length=500)),
                ('time', models.DateTimeField(default=django.utils.timezone.now)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment', to='auctions.listing')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-time',),
            },
        ),
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('bid', models.IntegerField(default=0)),
                ('listing', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='bid', to='auctions.listing')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bid', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'rating',
            },
        ),
    ]
